import{_ as s}from"./chunks/后端.a161c499.js";import{_ as a,o as n,c as l,Q as p}from"./chunks/framework.e90f0c97.js";const o="/assets/2-1.31bee022.png",_=JSON.parse('{"title":"Java02-程序运行","description":"","frontmatter":{"prev":{"text":"Java01-环境搭建","link":"./Java01-环境搭建.html"},"next":{"text":"Java03-数据类型与数据结构","link":"./Java03-数据类型与数据结构.html"}},"headers":[],"relativePath":"md/后端/Java02-程序运行.md","filePath":"md/后端/Java02-程序运行.md"}'),e={name:"md/后端/Java02-程序运行.md"},t=p('<p><img src="'+s+`" alt=""></p><h1 id="java02-程序运行" tabindex="-1">Java02-程序运行 <a class="header-anchor" href="#java02-程序运行" aria-label="Permalink to &quot;Java02-程序运行&quot;">​</a></h1><blockquote><p>在上一题中，我们成功搭建环境并运行了一段代码，在屏幕上打印出了“Hello World”，那么在本题中，你需要了解一个Java程序的基本结构。</p></blockquote><h2 id="task1-单文件代码结构" tabindex="-1"><strong>Task1.单文件代码结构</strong> <a class="header-anchor" href="#task1-单文件代码结构" aria-label="Permalink to &quot;**Task1.单文件代码结构**&quot;">​</a></h2><p>以下是一个名为“HelloWorld.java”文件中的代码：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">package</span><span style="color:#E1E4E8;"> com.</span><span style="color:#FDAEB7;font-style:italic;">E</span><span style="color:#E1E4E8;">xample;</span></span>
<span class="line"><span style="color:#6A737D;">/*------------------------------------*/</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> com.Example.tool.Print;</span></span>
<span class="line"><span style="color:#6A737D;">/*------------------------------------*/</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">HelloWorld</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">            Test.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">/*------------------------------------*/</span></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Test</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(){</span></span>
<span class="line"><span style="color:#E1E4E8;">        Print.</span><span style="color:#B392F0;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Hello World&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">package</span><span style="color:#24292E;"> com.</span><span style="color:#B31D28;font-style:italic;">E</span><span style="color:#24292E;">xample;</span></span>
<span class="line"><span style="color:#6A737D;">/*------------------------------------*/</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> com.Example.tool.Print;</span></span>
<span class="line"><span style="color:#6A737D;">/*------------------------------------*/</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">HelloWorld</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">            Test.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">/*------------------------------------*/</span></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Test</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(){</span></span>
<span class="line"><span style="color:#24292E;">        Print.</span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Hello World&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><ol><li>可以看到，这份代码被分成了四个部分，请尝试解释每个部分，回答什么是包（pakage），包的作用是什么，什么是main函数，并总结出一个单文件java程序的基本结构</li><li>在运行程序时，可以给程序传入参数，由main函数的args参数接收，请你更改main函数，使用命令行或者IDEA运行这个程序传入“111 222 333”这三个参数，并在main函数中打印出来。</li></ol><h2 id="task2-多文件java项目" tabindex="-1"><strong>Task2.多文件Java项目</strong> <a class="header-anchor" href="#task2-多文件java项目" aria-label="Permalink to &quot;**Task2.多文件Java项目**&quot;">​</a></h2><p>以下是一个简单的多文件Java项目。该项目的目录结构如图：</p><p><img src="`+o+`" alt="2-1"></p><p>文字版目录结构：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">Java_structure(根目录)</span></span>
<span class="line"><span style="color:#e1e4e8;">|--.idea (存放IDEA的项目配置信息，由IDE自动生成，可忽略)</span></span>
<span class="line"><span style="color:#e1e4e8;">|--com</span></span>
<span class="line"><span style="color:#e1e4e8;">|----Example</span></span>
<span class="line"><span style="color:#e1e4e8;">|------HelloWorld.java</span></span>
<span class="line"><span style="color:#e1e4e8;">|------tool</span></span>
<span class="line"><span style="color:#e1e4e8;">|--------Print.java</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">即该项目只有两个文件“HelloWorld.java”和“Print.java”</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">Java_structure(根目录)</span></span>
<span class="line"><span style="color:#24292e;">|--.idea (存放IDEA的项目配置信息，由IDE自动生成，可忽略)</span></span>
<span class="line"><span style="color:#24292e;">|--com</span></span>
<span class="line"><span style="color:#24292e;">|----Example</span></span>
<span class="line"><span style="color:#24292e;">|------HelloWorld.java</span></span>
<span class="line"><span style="color:#24292e;">|------tool</span></span>
<span class="line"><span style="color:#24292e;">|--------Print.java</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">即该项目只有两个文件“HelloWorld.java”和“Print.java”</span></span></code></pre></div><ol start="3"><li>在你本地的IDEA中创建上述结构的java项目，HelloWorld.java文件的内容前面已经给出，现在请你写出Print.java文件中的代码，使得该Java项目能正常运行并打印出“Hello World”。</li></ol><h2 id="本题提交方式" tabindex="-1"><strong>本题提交方式</strong> <a class="header-anchor" href="#本题提交方式" aria-label="Permalink to &quot;**本题提交方式**&quot;">​</a></h2><blockquote><p><a href="https://submit.glimmer.org.cn" target="_blank" rel="noreferrer"> 提交点这里 </a></p></blockquote><h2 id="出题人联系方式" tabindex="-1">出题人联系方式 <a class="header-anchor" href="#出题人联系方式" aria-label="Permalink to &quot;出题人联系方式&quot;">​</a></h2><blockquote><p><strong>出题人QQ：3425282590</strong></p></blockquote>`,17),c=[t];function r(i,E,y,d,v,m){return n(),l("div",null,c)}const g=a(e,[["render",r]]);export{_ as __pageData,g as default};
