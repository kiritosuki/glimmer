import{_ as s}from"./chunks/后端.a161c499.js";import{_ as a,o as n,c as l,Q as p}from"./chunks/framework.e90f0c97.js";const u=JSON.parse('{"title":"Java03-数据类型与数据结构","description":"","frontmatter":{"prev":{"text":"Java02-程序运行","link":"./Java02-程序运行.html"},"next":{"text":"Java04-控制流","link":"./Java04-控制流.html"}},"headers":[],"relativePath":"md/后端/Java03-数据类型与数据结构.md","filePath":"md/后端/Java03-数据类型与数据结构.md"}'),o={name:"md/后端/Java03-数据类型与数据结构.md"},e=p('<p><img src="'+s+`" alt=""></p><h1 id="java03-数据类型与数据结构" tabindex="-1">Java03-数据类型与数据结构 <a class="header-anchor" href="#java03-数据类型与数据结构" aria-label="Permalink to &quot;Java03-数据类型与数据结构&quot;">​</a></h1><h2 id="task1-变量和数据类型" tabindex="-1"><strong>Task1.变量和数据类型</strong> <a class="header-anchor" href="#task1-变量和数据类型" aria-label="Permalink to &quot;**Task1.变量和数据类型**&quot;">​</a></h2><p>变量用于存放数据。</p><p>在Java中，变量分为基本类型和引用类型（类似于C语言中的指针变量）。</p><p>基本类型有八种，都是Java语言预先定义好的关键字，分别是整型（4种），字符型（1种），浮点型（2种），布尔型（1种）</p><ol><li><p>说出这八种基本数据类型，</p></li><li><p>说出四种整型数据类型占用的字节数和表示范围</p></li></ol><p>不同的基本数据类型之间进行计算，比如int类型和long类型的变量相加，需要进行类型转换，请了解隐式类型转换和显式类型转换。</p><ol start="3"><li><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> a</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> c</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;0&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> b</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">a</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">c;</span></span>
<span class="line"><span style="color:#6A737D;">//请回答这个过程涉及到的是隐式类型转换还是显式类型转换，b的值是多少，为什么会是这个值。</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> a</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">char</span><span style="color:#24292E;"> c</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;0&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> b</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">a</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">c;</span></span>
<span class="line"><span style="color:#6A737D;">//请回答这个过程涉及到的是隐式类型转换还是显式类型转换，b的值是多少，为什么会是这个值。</span></span></code></pre></div></li><li><p>[拓展]请了解包装类，引用类型和基本数据类型缓存池。给出下面代码的输出结果并解释原因。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">Integer x </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Integer</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">18</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">Integer y </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Integer</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">18</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(x </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> y);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">Integer z </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Integer.</span><span style="color:#B392F0;">valueOf</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">18</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">Integer k </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Integer.</span><span style="color:#B392F0;">valueOf</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">18</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(z </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> k);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">Integer m </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Integer.</span><span style="color:#B392F0;">valueOf</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">300</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">Integer p </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Integer.</span><span style="color:#B392F0;">valueOf</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">300</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(m </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> p);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">Integer x </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Integer</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">18</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">Integer y </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Integer</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">18</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(x </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> y);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">Integer z </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Integer.</span><span style="color:#6F42C1;">valueOf</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">18</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">Integer k </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Integer.</span><span style="color:#6F42C1;">valueOf</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">18</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(z </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> k);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">Integer m </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Integer.</span><span style="color:#6F42C1;">valueOf</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">300</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">Integer p </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Integer.</span><span style="color:#6F42C1;">valueOf</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">300</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(m </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> p);</span></span></code></pre></div></li></ol><h2 id="task2-运算符" tabindex="-1"><strong>Task2.运算符</strong> <a class="header-anchor" href="#task2-运算符" aria-label="Permalink to &quot;**Task2.运算符**&quot;">​</a></h2><p>运算符分为算数运算符、关系运算符、位运算符、逻辑运算符、赋值运算符、三元运算符。请了解上述运算符后回答下列问题。</p><ol start="5"><li>算数运算符除了我们熟知的加减乘除（+ - * /）外，还有取余（%），自增（++），自减（--）。为了加深你对于自增运算符的理解，请执行下列代码，给出结果，并大概解释计算的过程。</li></ol><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;"> ;</span></span>
<span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> b </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;"> ;</span></span>
<span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> c</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">a) </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> (b</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">( c );</span></span>
<span class="line"><span style="color:#E1E4E8;">System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(a</span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;">&quot; &quot;</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">b);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#24292E;"> ;</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">7</span><span style="color:#24292E;"> ;</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> c</span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">a) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> (b</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">( c );</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(a</span><span style="color:#D73A49;">+</span><span style="color:#032F62;">&quot; &quot;</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">b);</span></span></code></pre></div><p>对初学者来说，位运算符比较难理解。其实位运算就是对数字背后的二进制形式进行操作。比如5&lt;&lt;1，表示把5往左移一位，就是先将5转化为二进制101，把101往左移动1位，不够的位用0补位，得到1010，还原为十进制的大小就是10。</p><p>6.你知道int、float在计算机是怎么储存的吗，为什么会发生两个正数相加结果为负数的事情？</p><h2 id="task3-数据结构" tabindex="-1"><strong>Task3.数据结构</strong> <a class="header-anchor" href="#task3-数据结构" aria-label="Permalink to &quot;**Task3.数据结构**&quot;">​</a></h2><p>为了高效地组织，利用数据来完成程序的设计，人们发明了一系列的数据结构，java的官方库已经实现了如<code>ArrayList</code>,<code>HashMap</code>,<code>HashSet</code>等数据结构，请你熟悉了解这些数据结构，完成以下问题：</p><p>1.小明想要快速统计考试科目的错题，请你根据给定的数据完成要求</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">math:5,English:10,Chinese:10,math:20,English:10,chemistry:30,math:10,math:20</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">math:5,English:10,Chinese:10,math:20,English:10,chemistry:30,math:10,math:20</span></span></code></pre></div><p>你需要对原始数据进行建模，再进行处理</p><p>2.统计完数据之后，小明想要排序找到错的最多的科目来加强学习</p><p>3.小明想不仅仅只是自己划定的数据，他还想要后续考试的错题也能加入，你需要为他设计一个能够让小明输入数据的程序</p><p>4.小明想统计自己的，同时也想统计小红的错题，请你设计一个程序能够兼容二者</p><h2 id="本题提交方式" tabindex="-1"><strong>本题提交方式</strong> <a class="header-anchor" href="#本题提交方式" aria-label="Permalink to &quot;**本题提交方式**&quot;">​</a></h2><blockquote><p><a href="https://submit.glimmer.org.cn" target="_blank" rel="noreferrer"> 提交点这里 </a></p></blockquote><h2 id="出题人联系方式" tabindex="-1">出题人联系方式 <a class="header-anchor" href="#出题人联系方式" aria-label="Permalink to &quot;出题人联系方式&quot;">​</a></h2><blockquote><p><strong>出题人QQ：3425282590</strong></p></blockquote>`,27),t=[e];function c(r,y,E,i,d,h){return n(),l("div",null,t)}const v=a(o,[["render",c]]);export{u as __pageData,v as default};
