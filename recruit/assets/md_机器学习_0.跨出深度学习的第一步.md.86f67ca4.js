import{_ as s}from"./chunks/9olqLl7-x6XtWyNUssHvLGkRzM5cj2_KAPAYU4vaHIw.9541447f.js";import{_ as a,o as n,c as o,Q as l}from"./chunks/framework.e90f0c97.js";const b=JSON.parse('{"title":"0: 跨出机器学习的第一步","description":"","frontmatter":{"prev":{"text":"简介","link":"./index.md"},"next":{"text":"1.基础的线性回归","link":"./1.基础的线性回归.md"}},"headers":[],"relativePath":"md/机器学习/0.跨出深度学习的第一步.md","filePath":"md/机器学习/0.跨出深度学习的第一步.md"}'),p={name:"md/机器学习/0.跨出深度学习的第一步.md"},e=l('<p><img src="'+s+`" alt="9olqLl7-x6XtWyNUssHvLGkRzM5cj2_KAPAYU4vaHIw"></p><h1 id="_0-跨出机器学习的第一步" tabindex="-1">0: 跨出机器学习的第一步 <a class="header-anchor" href="#_0-跨出机器学习的第一步" aria-label="Permalink to &quot;0: 跨出机器学习的第一步&quot;">​</a></h1><h2 id="欢迎来到深度学习" tabindex="-1"><strong>欢迎来到深度学习</strong> <a class="header-anchor" href="#欢迎来到深度学习" aria-label="Permalink to &quot;**欢迎来到深度学习**&quot;">​</a></h2><p>🌟 欢迎来到深度学习世界！​​ 机器学习是一门融合概率论、统计学、逼近论、凸分析、算法复杂度理论等多学科的交叉领域。它致力于让计算机模拟人类学习行为，获取新知识/技能，重组已有知识，持续优化系统性能。​深度学习正是机器学习中最耀眼的明星分支！</p><h2 id="数学基础" tabindex="-1">数学基础 <a class="header-anchor" href="#数学基础" aria-label="Permalink to &quot;数学基础&quot;">​</a></h2><p>🧮 数学基础 (别担心！)​​ 你需要了解：</p><ul><li><p>​微积分​：重点掌握偏导数、链式求导、梯度概念与计算。</p></li><li><p>​线性代数​：核心是矩阵运算和线性变换。矩阵运算里有必要拓展了解一下矩阵求导。</p></li><li><p>​概率论​：高中基础足够理解大部分概念，只需熟悉新术语。</p></li></ul><blockquote><p>📌提示​：无需深钻，够用即可！</p></blockquote><h2 id="✅编程语言基础" tabindex="-1">✅编程语言基础 <a class="header-anchor" href="#✅编程语言基础" aria-label="Permalink to &quot;✅编程语言基础&quot;">​</a></h2><p>python，你可以看网课或者自己用文档学习，不需要很多内容，很多python操作你在后面的题目中并不会用上。</p><h3 id="💻编辑器选择" tabindex="-1">💻编辑器选择 <a class="header-anchor" href="#💻编辑器选择" aria-label="Permalink to &quot;💻编辑器选择&quot;">​</a></h3><p>这里推荐pycharm或者vscode,可以使用其中的jupyter插件。</p><h2 id="📱深度学习" tabindex="-1">📱深度学习 <a class="header-anchor" href="#📱深度学习" aria-label="Permalink to &quot;📱深度学习&quot;">​</a></h2><p>深度学习基本概念(非常推荐以<a href="https://zh.d2l.ai/" target="_blank" rel="noreferrer">动手学深度学习</a>为主（有免费的教材与讲解视频，还附赠源代码和课程讨论区），<a href="https://www.bilibili.com/video/BV11H4y1F7uH/?spm_id_from=333.337.search-card.all.click&amp;vd_source=b09c379bfaaea43b4b23c2857b42d724" target="_blank" rel="noreferrer">吴恩达深度学习</a>作为辅助理解)，<a href="https://pytorch.ac.cn/docs/stable/index.html#google_vignette" target="_blank" rel="noreferrer">Pytorch文档</a>，<a href="https://www.bilibili.com/video/BV1Y7411d7Ys/?spm_id_from=333.999.0.0&amp;vd_source=dcc19fc51d3383c70024af0b50fd9206" target="_blank" rel="noreferrer">Pytorch框架教学</a></p><h3 id="🌈硬件要求" tabindex="-1">🌈硬件要求 <a class="header-anchor" href="#🌈硬件要求" aria-label="Permalink to &quot;🌈硬件要求&quot;">​</a></h3><p>作为一名软件工程专业的学生，我相信你的电脑一定配置还不错，深度学习是需要算力的，CPU虽然能胜任大部分计算任务，但是对于深度学习来说并不是最适合的，而GPU能加速计算过程，我们后面的任务需要用到GPU来加速你的计算，否则一个任务你可能会等待很久，如果你的电脑有独立显卡，那最好了。如果没有，那也不需要着急，因为现在有很多平台会提供免费的算力资源。 你可以使用以下平台获取算力：</p><ol><li><p><a href="https://www.kaggle.com/" target="_blank" rel="noreferrer">kaggle</a>(实名注册后每周30小时的GPU加速时间，可用T4*2,P100)</p></li><li><p><a href="https://www.aliyun.com/product/ecs/gpu?utm_content=se_1015892169" target="_blank" rel="noreferrer">阿里云</a>(新用户可以选择免费使用，连续三月，每月250算力)</p></li><li><p><a href="https://jiutian.10086.cn/edu/#/home" target="_blank" rel="noreferrer">九天·毕昇</a>(注册后 随机参加一个比赛可以获得1000算力豆折合下来是200 V100(16G)时)</p></li><li><p><a href="https://www.autodl.com/" target="_blank" rel="noreferrer">autoDL</a> (有学生优惠95折，是目前使用最广泛的算力租借平台)</p></li><li><p>其他算力租借平台</p></li></ol><h3 id="⚠️环境配置-这一步很重要" tabindex="-1">⚠️环境配置（这一步很重要） <a class="header-anchor" href="#⚠️环境配置-这一步很重要" aria-label="Permalink to &quot;⚠️环境配置（这一步很重要）&quot;">​</a></h3><p>如果你想要在你自己的电脑上或者服务器上运行你的模型训练任务，环境配置是必要的，当然你也可以使用kaggle这一类的平台中的notebook来暂时避免麻烦，不过为了长远发展，我建议还是自己进行环境配置</p><ol><li><p>李沐的<strong>动手学深度学习</strong>视频中有环境的配置过程可以参考</p></li><li><p>你已经是一名软件工程的学生了，网络上有丰富的教程你可以自行选择，所以STFW吧</p></li></ol><p>环境要求有以下这些(其实跟着李沐应该没什么问题) conda/miniconda，jupyter，torch，torchvision，d2l/d2l-zh</p><p><strong>速度慢的话可以换源</strong></p><blockquote><p>注意 ：conda是一个开源的软件包管理系统和环境管理系统，它主要用于安装多个版本的软件包及其依赖关系，并能轻松地在它们之间切换。建议你使用anaconda创建你自己的环境进行环境管理。</p></blockquote><h3 id="tips" tabindex="-1">Tips <a class="header-anchor" href="#tips" aria-label="Permalink to &quot;Tips&quot;">​</a></h3><blockquote><p>💡合理利用ai和搜索工具提高你的学习效率</p></blockquote><h2 id="🎯入门题目" tabindex="-1">🎯入门题目 <a class="header-anchor" href="#🎯入门题目" aria-label="Permalink to &quot;🎯入门题目&quot;">​</a></h2><blockquote><p>一些相关的简单的代码，经过学习你需要一些实践</p></blockquote><h3 id="_1-列表、元组与字典" tabindex="-1"><strong>1. 列表、元组与字典</strong> <a class="header-anchor" href="#_1-列表、元组与字典" aria-label="Permalink to &quot;**1. 列表、元组与字典**&quot;">​</a></h3><ol><li><p><strong>元组解包与切片</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">t </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">30</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">40</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(t[</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">:])          </span><span style="color:#6A737D;"># 输出？</span></span>
<span class="line"><span style="color:#E1E4E8;">x, </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">y, z </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> t</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(y)               </span><span style="color:#6A737D;"># 输出？</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">t </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">20</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">30</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">40</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(t[</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">:])          </span><span style="color:#6A737D;"># 输出？</span></span>
<span class="line"><span style="color:#24292E;">x, </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">y, z </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> t</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(y)               </span><span style="color:#6A737D;"># 输出？</span></span></code></pre></div></li><li><p><strong>字典嵌套操作</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">stu </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;LiMing&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;scores&quot;</span><span style="color:#E1E4E8;">: {</span><span style="color:#9ECBFF;">&quot;Math&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">90</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Python&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">85</span><span style="color:#E1E4E8;">}}</span></span>
<span class="line"><span style="color:#E1E4E8;">stu[</span><span style="color:#9ECBFF;">&quot;scores&quot;</span><span style="color:#E1E4E8;">][</span><span style="color:#9ECBFF;">&quot;Python&quot;</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">95</span><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># 修改Python成绩</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(stu[</span><span style="color:#9ECBFF;">&quot;scores&quot;</span><span style="color:#E1E4E8;">][</span><span style="color:#9ECBFF;">&quot;Python&quot;</span><span style="color:#E1E4E8;">])  </span><span style="color:#6A737D;"># 输出？</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">stu </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;LiMing&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;scores&quot;</span><span style="color:#24292E;">: {</span><span style="color:#032F62;">&quot;Math&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">90</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Python&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">85</span><span style="color:#24292E;">}}</span></span>
<span class="line"><span style="color:#24292E;">stu[</span><span style="color:#032F62;">&quot;scores&quot;</span><span style="color:#24292E;">][</span><span style="color:#032F62;">&quot;Python&quot;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">95</span><span style="color:#24292E;">  </span><span style="color:#6A737D;"># 修改Python成绩</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(stu[</span><span style="color:#032F62;">&quot;scores&quot;</span><span style="color:#24292E;">][</span><span style="color:#032F62;">&quot;Python&quot;</span><span style="color:#24292E;">])  </span><span style="color:#6A737D;"># 输出？</span></span></code></pre></div></li></ol><h3 id="_2-文件操作" tabindex="-1"><strong>2. 文件操作</strong> <a class="header-anchor" href="#_2-文件操作" aria-label="Permalink to &quot;**2. 文件操作**&quot;">​</a></h3><p>在一切开始之前，在当前目录下创建一个名为&#39;example.txt&#39;的文件，并输入以下内容。</p><blockquote><p>深度学习是这样的，懂的人只需要全身心投入到网络模型架构中，随便堆叠几个模块，无聊试试就可以了，可是调参要考虑的事情就很多了，要不断在Python文件中修改学习率这些超参数，操作太复杂了</p></blockquote><ol><li><p><strong>文件内容统计</strong></p><p>统计example.txt中&quot;Python&quot;出现的次数</p></li><li><p><strong>行号标记写入</strong><br> 将example.txt内容按行写入new.txt，每行前加行号</p></li></ol><hr><h3 id="_3-numpy基础" tabindex="-1"><strong>3. NumPy基础</strong> <a class="header-anchor" href="#_3-numpy基础" aria-label="Permalink to &quot;**3. NumPy基础**&quot;">​</a></h3><ol><li><p>创建一个10*10的array A，并用1-100的随机值填充。</p></li><li><p>创建一个10*10的单位矩阵B，并将A与B作矩阵乘法，得到矩阵C。打印出矩阵C的值。</p></li><li><p><strong>条件筛选操作</strong> 在矩阵A中找出大于80的元素并替换为0</p></li><li><p><strong>分块计算平均值</strong><br> 将10x10矩阵拆分为4个5x5子矩阵，求每个子矩阵均值</p></li></ol><hr><h3 id="_4-pytorch基础" tabindex="-1"><strong>4. PyTorch基础</strong> <a class="header-anchor" href="#_4-pytorch基础" aria-label="Permalink to &quot;**4. PyTorch基础**&quot;">​</a></h3><ol><li>张量创建和属性</li></ol><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> torch</span></span>
<span class="line"><span style="color:#6A737D;"># 创建张量 A：形状 (3, 4)，元素为 [0, 11] 的整数</span></span>
<span class="line"><span style="color:#E1E4E8;">A </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> torch.arange(</span><span style="color:#79B8FF;">12</span><span style="color:#E1E4E8;">).reshape(</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;"># 创建张量 B：形状 (3, 4)，服从标准正态分布</span></span>
<span class="line"><span style="color:#E1E4E8;">B </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> _____</span></span>
<span class="line"><span style="color:#6A737D;"># 判断以下操作是否正确：</span></span>
<span class="line"><span style="color:#6A737D;"># (1) A.shape 返回 torch.Size([3, 4])  </span></span>
<span class="line"><span style="color:#6A737D;"># (2) B.dtype 默认返回 torch.float32  </span></span>
<span class="line"><span style="color:#6A737D;"># (3) A.device 默认为 GPU</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> torch</span></span>
<span class="line"><span style="color:#6A737D;"># 创建张量 A：形状 (3, 4)，元素为 [0, 11] 的整数</span></span>
<span class="line"><span style="color:#24292E;">A </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> torch.arange(</span><span style="color:#005CC5;">12</span><span style="color:#24292E;">).reshape(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;"># 创建张量 B：形状 (3, 4)，服从标准正态分布</span></span>
<span class="line"><span style="color:#24292E;">B </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> _____</span></span>
<span class="line"><span style="color:#6A737D;"># 判断以下操作是否正确：</span></span>
<span class="line"><span style="color:#6A737D;"># (1) A.shape 返回 torch.Size([3, 4])  </span></span>
<span class="line"><span style="color:#6A737D;"># (2) B.dtype 默认返回 torch.float32  </span></span>
<span class="line"><span style="color:#6A737D;"># (3) A.device 默认为 GPU</span></span></code></pre></div><ol start="2"><li>张量运算与广播</li></ol><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> torch.tensor([[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">], [</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">], [</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">]])  </span><span style="color:#6A737D;"># shape (3, 1)</span></span>
<span class="line"><span style="color:#E1E4E8;">b </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> torch.tensor([</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">])        </span><span style="color:#6A737D;"># shape (3,)</span></span>
<span class="line"><span style="color:#6A737D;"># 计算 c = a + b，并写出 c 的形状</span></span>
<span class="line"><span style="color:#E1E4E8;">c </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> _____</span></span>
<span class="line"><span style="color:#6A737D;"># 计算 d = a * b，并解释广播规则</span></span>
<span class="line"><span style="color:#E1E4E8;">d </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> _____</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> torch.tensor([[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">], [</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">], [</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">]])  </span><span style="color:#6A737D;"># shape (3, 1)</span></span>
<span class="line"><span style="color:#24292E;">b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> torch.tensor([</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">])        </span><span style="color:#6A737D;"># shape (3,)</span></span>
<span class="line"><span style="color:#6A737D;"># 计算 c = a + b，并写出 c 的形状</span></span>
<span class="line"><span style="color:#24292E;">c </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> _____</span></span>
<span class="line"><span style="color:#6A737D;"># 计算 d = a * b，并解释广播规则</span></span>
<span class="line"><span style="color:#24292E;">d </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> _____</span></span></code></pre></div><h2 id="提交要求" tabindex="-1">提交要求 <a class="header-anchor" href="#提交要求" aria-label="Permalink to &quot;提交要求&quot;">​</a></h2><h3 id="提交内容" tabindex="-1">提交内容 <a class="header-anchor" href="#提交内容" aria-label="Permalink to &quot;提交内容&quot;">​</a></h3><ul><li><p><strong>代码文件</strong></p><p>将代码部分的.ipynb文件作为邮件附件，命名格式：<code>ml-0-姓名-学号.ipynb</code></p></li><li><p><strong>文档报告</strong></p><p>将写有这道题目文本解答的.md文件作为邮件附件，命名格式：<code>ml-0-姓名-学号.md</code></p></li></ul><h3 id="提交方式" tabindex="-1">提交方式 <a class="header-anchor" href="#提交方式" aria-label="Permalink to &quot;提交方式&quot;">​</a></h3><ul><li><p><strong>邮箱</strong>: <code>gimmerml401@163.com</code></p></li><li><p><strong>主题</strong>: <code>0-姓名-学号</code></p></li></ul><blockquote><p>出题人：鹁霖</p><p>QQ：2046193615</p></blockquote>`,48),t=[e];function r(c,i,y,E,h,d){return n(),o("div",null,t)}const g=a(p,[["render",r]]);export{b as __pageData,g as default};
