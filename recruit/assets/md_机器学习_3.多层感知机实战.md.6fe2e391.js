import{_ as s}from"./chunks/9olqLl7-x6XtWyNUssHvLGkRzM5cj2_KAPAYU4vaHIw.9541447f.js";import{_ as a,o as l,c as n,Q as o}from"./chunks/framework.e90f0c97.js";const m=JSON.parse('{"title":"3: 多层感知机实战","description":"","frontmatter":{"prev":{"text":"2.多层感知机理论","link":"./2.多层感知机理论.md"},"next":{"text":"4.卷积神经网络理论","link":"./4.卷积神经网络理论.md"}},"headers":[],"relativePath":"md/机器学习/3.多层感知机实战.md","filePath":"md/机器学习/3.多层感知机实战.md"}'),p={name:"md/机器学习/3.多层感知机实战.md"},e=o('<p><img src="'+s+`" alt="9olqLl7-x6XtWyNUssHvLGkRzM5cj2_KAPAYU4vaHIw"></p><h1 id="_3-多层感知机实战" tabindex="-1">3: 多层感知机实战 <a class="header-anchor" href="#_3-多层感知机实战" aria-label="Permalink to &quot;3: 多层感知机实战&quot;">​</a></h1><p>经过基础理论的学习之后最重要的就是实践，本题目是对理论的应用，have fun</p><h2 id="🎯数据集" tabindex="-1">🎯数据集 <a class="header-anchor" href="#🎯数据集" aria-label="Permalink to &quot;🎯数据集&quot;">​</a></h2><p><a href="https://www.kaggle.com/datasets/renecardoso/national-survey-on-school-dropout" target="_blank" rel="noreferrer">Glimmer-2025-ml-2</a></p><h2 id="🌟任务流程" tabindex="-1">🌟任务流程 <a class="header-anchor" href="#🌟任务流程" aria-label="Permalink to &quot;🌟任务流程&quot;">​</a></h2><blockquote><p>同时也是几乎所有深度学习任务的基本流程</p></blockquote><p>1.下载并加载数据</p><p>2.进行数据预处理和数据集的划分</p><p>3.搭建模型架构（本次为MLP）</p><p>4.进行模型训练</p><p>5.用验证集对模型训练结果进行评估</p><h2 id="💡核心任务" tabindex="-1">💡核心任务 <a class="header-anchor" href="#💡核心任务" aria-label="Permalink to &quot;💡核心任务&quot;">​</a></h2><p>基于数据集，实现一个<strong>学生是否辍学的分类器</strong></p><h3 id="📦mlp" tabindex="-1">📦MLP <a class="header-anchor" href="#📦mlp" aria-label="Permalink to &quot;📦MLP&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DropoutClassifier</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">nn</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">Module</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">__init__</span><span style="color:#E1E4E8;">(self, input_size):</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">super</span><span style="color:#E1E4E8;">(DropoutClassifier,</span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">).</span><span style="color:#79B8FF;">__init__</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;"># </span><span style="color:#F97583;">TODO</span><span style="color:#6A737D;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">forward</span><span style="color:#E1E4E8;">(self,X):</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;"># </span><span style="color:#F97583;">TODO</span><span style="color:#6A737D;">:</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">DropoutClassifier</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">nn</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">Module</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__init__</span><span style="color:#24292E;">(self, input_size):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">super</span><span style="color:#24292E;">(DropoutClassifier,</span><span style="color:#005CC5;">self</span><span style="color:#24292E;">).</span><span style="color:#005CC5;">__init__</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># </span><span style="color:#D73A49;">TODO</span><span style="color:#6A737D;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">forward</span><span style="color:#24292E;">(self,X):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># </span><span style="color:#D73A49;">TODO</span><span style="color:#6A737D;">:</span></span></code></pre></div><h3 id="🟢训练和验证" tabindex="-1">🟢训练和验证 <a class="header-anchor" href="#🟢训练和验证" aria-label="Permalink to &quot;🟢训练和验证&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">train</span><span style="color:#E1E4E8;">(model,train_loader,test_loader,loss,epoch,lr):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># </span><span style="color:#F97583;">TODO</span><span style="color:#6A737D;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 做到训练模型和验证训练准确率</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">train</span><span style="color:#24292E;">(model,train_loader,test_loader,loss,epoch,lr):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># </span><span style="color:#D73A49;">TODO</span><span style="color:#6A737D;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 做到训练模型和验证训练准确率</span></span></code></pre></div><h2 id="⏳数据处理" tabindex="-1">⏳数据处理 <a class="header-anchor" href="#⏳数据处理" aria-label="Permalink to &quot;⏳数据处理&quot;">​</a></h2><p>建议使用pandas库（pd）进行数据的读取，随后再进行数据的归一化等操作</p><h2 id="其他" tabindex="-1">其他： <a class="header-anchor" href="#其他" aria-label="Permalink to &quot;其他：&quot;">​</a></h2><p>推荐使用matplotlib进行可视化</p><p>如果可以，使用gpu训练</p><h2 id="✅思考" tabindex="-1">✅思考 <a class="header-anchor" href="#✅思考" aria-label="Permalink to &quot;✅思考&quot;">​</a></h2><p>1.本次任务中数据处理的方式有？</p><p>2.有哪些方法可以使你的模型的泛化性提高？</p><p>3.对于过拟合和欠拟合现象我们应该如何避免，或者当已经出现这种现象时，应该怎么解决</p><h2 id="报告内容" tabindex="-1">报告内容 <a class="header-anchor" href="#报告内容" aria-label="Permalink to &quot;报告内容&quot;">​</a></h2><ol><li><p>模型实现</p></li><li><p>训练过程</p></li><li><p>改进策略</p></li></ol><ul><li><p>使用的方法</p></li><li><p>达到的效果</p></li></ul><ol start="4"><li>收获</li></ol><h2 id="⚠️注意事项" tabindex="-1">⚠️注意事项： <a class="header-anchor" href="#⚠️注意事项" aria-label="Permalink to &quot;⚠️注意事项：&quot;">​</a></h2><ol><li><p><strong>手写核心代码</strong>：模型定义和训练循环必须手写，不能直接使用AI生成。</p></li><li><p><strong>理解提供代码</strong>：充分理解提供的数据处理和评估代码，能够解释其工作原理。</p></li><li><p><strong>详细记录过程</strong>：在报告中详细记录你的实现过程、思考过程和改进过程。</p></li><li><p><strong>代码注释</strong>：为你实现的代码添加详细注释，说明每部分的作用。</p></li><li><p><strong>实验记录</strong>：记录不同超参数设置的实验结果，分析其影响。</p></li></ol><h2 id="提交要求" tabindex="-1">提交要求 <a class="header-anchor" href="#提交要求" aria-label="Permalink to &quot;提交要求&quot;">​</a></h2><h3 id="提交内容" tabindex="-1">提交内容 <a class="header-anchor" href="#提交内容" aria-label="Permalink to &quot;提交内容&quot;">​</a></h3><ul><li><p><strong>代码文件</strong></p><p>：将代码部分的.ipynb文件作为邮件附件，命名格式：<code>ml-03-姓名-学号.ipynb</code></p></li><li><p><strong>文档报告</strong></p><p>：将写有这道题目文本解答的.md文件作为邮件附件，命名格式：<code>ml-03-姓名-学号.md</code></p></li><li><p>将两个文件压缩成压缩包<code>ml-03-姓名-学号.zip</code>提交</p></li></ul><h3 id="提交方式" tabindex="-1">提交方式 <a class="header-anchor" href="#提交方式" aria-label="Permalink to &quot;提交方式&quot;">​</a></h3><ul><li><p><strong>邮箱</strong>: <code>gimmerml401@163.com</code></p></li><li><p><strong>主题</strong>: <code>3-姓名-学号</code></p></li></ul><blockquote><p>出题人：鹁霖</p><p>QQ：2046193615</p></blockquote>`,39),t=[e];function r(c,i,d,h,y,E){return l(),n("div",null,t)}const b=a(p,[["render",r]]);export{m as __pageData,b as default};
